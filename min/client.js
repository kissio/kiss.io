"use strict";function Client(e,t){return this instanceof Client?(this.server=e,this.conn=t,this.encoder=new parser.Encoder,this.decoder=new parser.Decoder,this.id=t.id,this.request=t.request,this.sockets={},this.nsps={},this.decoder.on("decoded",this.onDecoded.bind(this)),this.conn.on("data",this.onData.bind(this)),this.conn.on("error",this.onError.bind(this)),void this.conn.on("close",this.onClose.bind(this))):new Client(e,t)}var debug=require("debug")("kiss.io:client"),parser=require("socket.io-parser"),url=require("url"),Socket=require("./socket");Client.prototype.connect=function(e,t){var s=this.server.nsps[e];if(debug("connecting to namespace %s",e),!s)return void this.packet({type:parser.ERROR,nsp:e,data:"Invalid namespace"});var o=new Socket(s,this,t),n=this;process.nextTick(function(){s.add(o,function(e){e?(o.error(e.message||e.data||e),n.remove(o)):(n.sockets[o.id]=o,n.nsps[s.name]=o)})})},Client.prototype.disconnect=function(){Object.keys(this.sockets).forEach(function(e){this.sockets[e].disconnect(),delete this.sockets[e]},this),this.sockets={},this.close()},Client.prototype.remove=function(e){var t=e.id||e;if(!this.sockets.hasOwnProperty(t))return void debug("ignoring remove for %s",t);var s=this.sockets[t].nsp;delete this.sockets[t],delete this.nsps[s.name]},Client.prototype.close=function(){"open"==this.conn.readyState&&(debug("forcing transport close"),this.conn.close(),this.onClose("forced server close"))},Client.prototype.packet=function(e,t){function s(e){if(!t["volatile"]||o.conn.transport.writable)for(var s=0;s<e.length;s++)o.conn.write(e[s],{compress:t.compress})}t=t||{};var o=this;"open"==this.conn.readyState?(debug("writing packet %j",e),t.preEncoded?s(e):this.encoder.encode(e,function(e){s(e)})):debug("ignoring packet write %j",e)},Client.prototype.onData=function(e){try{this.decoder.add(e)}catch(t){this.onError(t)}},Client.prototype.onDecoded=function(e){if(parser.CONNECT==e.type)this.connect(url.parse(e.nsp).pathname,url.parse(e.nsp,!0).query);else{var t=this.nsps[e.nsp];t?t.onPacket(e):debug("no socket for namespace %s",e.nsp)}},Client.prototype.onError=function(e){Object.keys(this.sockets).forEach(function(t){this.sockets[t].onError(e)},this),this.onClose("client error")},Client.prototype.onClose=function(e){debug("client close with reason %s",e),this.destroy(),Object.keys(this.sockets).forEach(function(t){this.sockets[t].onClose(e),delete this.sockets[t]},this),this.sockets={},this.decoder.destroy()},Client.prototype.destroy=function(){this.decoder.removeAllListeners("decoded"),this.conn.removeAllListeners("data"),this.conn.removeAllListeners("error"),this.conn.removeAllListeners("close")},module.exports=Client;